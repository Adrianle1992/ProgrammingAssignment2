my_na <-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <-c(foo=11,bar=2, norf=NA)
vect
names
names()
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attribute(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix()
?matrix
matrix(1:20,nrows=4,ncols=5)
matrix(1:20,nrow=4,ncol=1)
my_matrix2<-matrix(1:20,nrow=4,ncol=1)
my_matrix2 <- matrix(1:20,nrow=4,ncol=1)
info()
my_matrix2 <- (data=1:20, nrow=4, ncol=5)
my_matrix2 <- (1:20, nrow=4, ncol=5)
my_matrix2 <- matrix(data=1:20, nrow=4, ncol=5)
identical(my_matrix,my_matrix2)
patients <-c("Bill","Gina","Kelly","Sean")
cbind(patients, my_matrix)
my_data <-data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <-c("patients","age","weight","bp","rating","test")
cnames <- c("patients","age","weight","bp","rating","test")
cnames <- c("patient","age","weight","bp","rating","test")
colnames(my)
colnames(my_data) <- cnames
my_data
?lm
swirl ()
TRUE == TRUE
FALSE == TRUE
(FALSE == TRUE) == FALSE
6 ==7
6<7
10 <= 10
5 !=7
!(5==7)
FALSE & FALSE
TRUE & C(TRUE,FALSE,FALSE)
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5 > 8 || 6 != 8 && 4>3.9
isTRUE (6>4)
identical ('twins','twins')
xor (5==6, !False)
xor (5==6, !FALSE)
ints <-sample(10)
print(ints)
ints
ints >5
which (ints>7)
any (ints<0)
all (ints>0)
?sapply
?unclass
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function("My first function!")
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(std,c(1.4,3.6,7.9,8.8))
?standard deviation
?standard deviatio`n
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(x[1],c(8,4,0))
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming","is","fun!")
submit()
telegram("Programming","is fun!")
submit()
madlib(place="Singapore",adjective="boring", noun = "food")
mad_libs(place="Singapore",adjective="boring", noun = "food")
suvmut()
submit()
"I love" %p% "R!""
""
"I love" %p% "R!"
"I love" %p%  "R!"
"I love"
"I love" %p% "R!"
"I" %p% "love" %p% "R!"
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
Sys.time()
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekday(d1)
weekdays(d1)
months(t1)
quarters(t1)
quarters(t2)
t3<-strptime("October 17, 1986 08:24"")
""
t3<-strptime("October 17, 1986 08:24")
t3<-"October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time() -1
Sys.time() - t1
difftime(Sys.time(),t1,units="days")
x<-1:10
if x>5 {}
if x>5 { x<-0}
if (x>5) {x<-0}
f<-function(x) {}
f<-function(x) {
g<- function(y) {
y+z
}
z<-4
x+g(x)
}
f(3)
z<-10
f(3)
f<-function(x) {#
+  g<- function(y) {#
+   y+z#
+  }#
+  z<-10#
+  x+g(x)#
+ }
f<-function(x) {g<- function(y) {#
+   y+z#
+  }#
+  z<-10#
+  x+g(x)#
+ }
set.seed(1)
rpois(5,2)
?norm
?dnorm
?set.seed
?Rprofile
?Rprof
?system.time
library(datasets)
data(iris)
?iris
mean(iris$Sepal.length)
iris
class(iris$Sepal.Length)
(iris$Sepal.Length[iris$Species==virginica]])
(iris$Sepal.Length[iris$Species==virginica])
(iris$Sepal.Length[iris$Species=='virginica'])
mean(iris$Sepal.Length[iris$Species=='virginica'])
library (datasets)
data(mtcars)
?mtcars
mtcars
?tapply
?with
with(mtcars,tapply(mpg,cyl,mean))
?split
sapply(split(mtcars$mpg, mtcars$cyl), mean)
mean(mtcars$mpg, mtcars$cyl)
avg_mpg<-mean(mtcars$mpg, mtcars$cyl)
avg_mpg<-with(mtcars,tapply(mpg,cyl,mean))
avg_mpg
avg_mpg$4 - avg_mpg$8
class(avg_mpg$4)
class(avg_mpg[[4]])
class(avg_mpg[[1]])
(avg_mpg[[1]]) - avg_mpg[[3]]
debug(ls)
ls
?debug
source("makeVector.R")
source("cacheMatrix.R")
?makeVector
matrix()
test_matrix<-matrix()
test_matrix [2,2] <-1
test_matrix [2,1] <-1
x<-numeric(3)
x
x<-numeric(0)
x
x
str(x)
?x
summary(x)
x
x$gey()
x$get()
?get
get(x)
get
setmean<- function(mean) m<<-mean
setmean([1 2 3 4])
setmean(c(1 2 3 4))
setmean(c(1, 2, 3, 4))
c<-setmean(c(1, 2, 3, 4))
c
